Sub StartScraper()
    On Error GoTo ErrorHandler  ' Start error handling

    ' Call the Python script to start scraping
    Call RunPythonScraper

    Exit Sub  ' Ensure Exit Sub before reaching ErrorHandler in normal flow

ErrorHandler:
    ' Handle errors gracefully
    MsgBox "An error occurred while running the scraper. Please check and try again."
End Sub

Sub RunPythonScraper()
    ' Define the paths dynamically based on the workbook's directory
    Dim baseDir As String
    Dim pythonExe As String, scriptPath As String
    baseDir = ThisWorkbook.Path  ' Use the workbook's directory
    pythonExe = baseDir & "\.venv\Scripts\python.exe"  ' Example path to virtual environment Python
    scriptPath = baseDir & "\scraper_script.py"       ' Example path to the Python script

    Dim shell As Object
    Dim command As String
    Dim process As Object
    Dim output As String, errors As String
    Set shell = CreateObject("WScript.Shell")

    On Error GoTo ErrorHandler

    ' Construct the command
    command = """" & pythonExe & """ """ & scriptPath & """"

    ' Execute the command and capture standard output and error
    Set process = shell.Exec(command)
    
    Do While process.Status = 0
        DoEvents
    Loop

    ' Read the standard output and error streams
    output = process.StdOut.ReadAll
    errors = process.StdErr.ReadAll

    ' If there are errors, raise an error
    If Len(errors) > 0 Then
        Err.Raise vbObjectError + 1, , "Python script error: " & errors
    End If

    ' Optionally log the output for debugging
    Debug.Print output

    Exit Sub

ErrorHandler:
    Dim errorMessage As String
    errorMessage = "Error #" & Err.Number & ": " & Err.Description
    MsgBox errorMessage
End Sub
