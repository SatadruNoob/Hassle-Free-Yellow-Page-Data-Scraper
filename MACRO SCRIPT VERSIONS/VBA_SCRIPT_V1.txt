Dim scrapingInProgress As Boolean

Sub StartScraper()
    ' Check if scraper is already running
    If scrapingInProgress Then
        MsgBox "Scraper is currently running. Please wait until it completes."
        Exit Sub
    End If

    ' Set scraping status to in-progress
    scrapingInProgress = True
    UpdateButtonStatus "Running", RGB(255, 0, 0)  ' Red button when running

    On Error GoTo ErrorHandler  ' Start error handling

    ' Call the Python script to start scraping
    Call RunPythonScraper

    ' Monitor the script status without needing a cell check
    WaitForScraperCompletion

    Exit Sub  ' Ensure Exit Sub before reaching ErrorHandler in normal flow

ErrorHandler:
    ' Handle errors gracefully
    scrapingInProgress = False
    UpdateButtonStatus "Error", RGB(255, 255, 0)  ' Yellow button for errors
    MsgBox "An error occurred while running the scraper. Please check and try again."
End Sub

Sub UpdateButtonStatus(status As String, color As Long)
    ' Update button color and text based on the status
    Dim btn As Button
    Set btn = ThisWorkbook.Sheets("Input Sheet").Buttons("Button1")
    btn.OnAction = "StartScraper"
    btn.Caption = "Button1 (" & status & ")"
    btn.BackColor = color
End Sub

Sub RunPythonScraper()
    ' Define the paths dynamically based on the workbook's directory
    Dim baseDir As String
    Dim pythonExe As String, scriptPath As String
    baseDir = ThisWorkbook.Path  ' Use the workbook's directory
    pythonExe = baseDir & "\.venv\Scripts\python.exe"  ' Example path to virtual environment Python
    scriptPath = baseDir & "\scraper_script.py"       ' Example path to the Python script

    Dim shell As Object
    Dim processID As Integer
    Set shell = CreateObject("WScript.Shell")

    On Error GoTo ErrorHandler
    processID = shell.Run("""" & pythonExe & """ """ & scriptPath & """", 1, True)
    If processID <> 0 Then
        Err.Raise vbObjectError + 1, , "Python script failed with process ID: " & processID
    End If
    Exit Sub

ErrorHandler:
    Dim errorMessage As String
    errorMessage = "Error #" & Err.Number & ": " & Err.Description
    MsgBox errorMessage
    scrapingInProgress = False
    UpdateButtonStatus "Error", RGB(255, 255, 0)
End Sub

Sub WaitForScraperCompletion()
    ' Get the base directory from the workbook location
    Dim baseDir As String
    baseDir = ThisWorkbook.Path  ' Use the workbook's directory

    Dim statusFilePath As String
    statusFilePath = baseDir & "\status.txt"  ' Combine base directory with the file name

    Dim fso As Object
    Set fso = CreateObject("Scripting.FileSystemObject")
    
    Dim startTime As Single
    startTime = Timer  ' Start the timeout timer

    Do
        Application.Wait Now + TimeValue("0:00:01")  ' Wait 1 second between checks
        DoEvents

        If fso.FileExists(statusFilePath) Then
            Dim txt As Object
            Set txt = fso.OpenTextFile(statusFilePath, 1)  ' Open as read-only
            If txt.ReadAll = "Complete" Then Exit Do
            txt.Close
        End If

        ' Timeout check: Exit if more than 300 seconds (5 minutes) have passed
        If Timer - startTime > 300 Then
            MsgBox "Scraping timed out. Please check the Python script or status file."
            Exit Do
        End If
    Loop

    ' Clean up after completion
    scrapingInProgress = False
    UpdateButtonStatus "Ready", RGB(0, 255, 0)  ' Green button when ready
    
    ' Delete the status file to reset for next run
    If fso.FileExists(statusFilePath) Then fso.DeleteFile statusFilePath
End Sub