Sub RunScraperMacro()
    Dim inputWorkbook As Workbook
    Dim macroWorkbook As Workbook
    Dim wsResults As Worksheet
    Dim macroInputSheet As Worksheet
    Dim macroResultSheet As Worksheet
    Dim statusFile As String
    Dim pythonScript As String
    Dim directoryPath As String
    Dim shellCommand As String
    Dim fileSystem As Object
    Dim fileStream As Object
    Dim statusText As String
    Dim timeout As Date

    On Error GoTo ErrorHandler

    ' Define paths
    directoryPath = ThisWorkbook.Path
    statusFile = directoryPath & "\status.txt"
    pythonScript = "scraper_script.py"

    ' Construct the shell command
    shellCommand = "cmd.exe /k cd """ & directoryPath & """ && """ & pythonScript & """"

    ' Delete existing status.txt file, if present
    Set fileSystem = CreateObject("Scripting.FileSystemObject")
    If fileSystem.FileExists(statusFile) Then
        fileSystem.DeleteFile statusFile
    End If

    ' Open the business_listings.xlsx and set sheets
    Set inputWorkbook = Workbooks.Open(directoryPath & "\business_listings.xlsx")
    Set macroWorkbook = ThisWorkbook
    Set macroInputSheet = macroWorkbook.Sheets("Macro_Automation_Input")
    Set macroResultSheet = macroWorkbook.Sheets("Macro_Automation_Result")

    ' Copy input data
    macroInputSheet.Range("A2:D2").Copy Destination:=inputWorkbook.Sheets("Input Sheet").Range("A2:D2")
    inputWorkbook.Sheets("Input Sheet").Range("E2").Value = "Run"

    ' Save and close input workbook
    inputWorkbook.Save
    inputWorkbook.Close

    ' Execute Python script
    Shell shellCommand, vbNormalFocus

    ' Wait for Python script to complete dynamically
    timeout = Now + TimeValue("0:02:00") ' 2-minute timeout

    Do While True
        If fileSystem.FileExists(statusFile) Then
            Set fileStream = fileSystem.OpenTextFile(statusFile, 1)
            statusText = fileStream.ReadAll
            fileStream.Close

            If InStr(1, statusText, "Complete", vbTextCompare) > 0 Then
                Exit Do
            End If
        End If

        If Now > timeout Then
            MsgBox "Error: Script execution timed out.", vbCritical
            Exit Sub
        End If

        DoEvents
        Application.Wait Now + TimeValue("0:00:01")
    Loop

    ' Copy results to Macro_Automation_Result
    Set wsResults = Workbooks(directoryPath & "\business_listings.xlsx").Sheets("Results Sheet")
    wsResults.UsedRange.Copy Destination:=macroResultSheet.Range("A1")

    ' Save macro workbook
    macroWorkbook.Save

    Exit Sub

ErrorHandler:
    MsgBox "An error occurred: " & Err.Description, vbCritical
End Sub